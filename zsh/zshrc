#
# Tmux autoload
#
# Tmux starts only if we're not inside VSCode or Vim
#
function _tmux_autostart() {
    if [ ${TERM_PROGRAM:-default} != "vscode" ] && [ -z $VIM ]; then
        if which tmux 2>&1 >/dev/null; then
            if [ $TERM != "screen-256color" ] && [ $TERM != "screen" ]; then
                if tmux has -t tmux 2>&1 >/dev/null; then
                    tmux attach -t tmux -d
                else
                    tmux new -s tmux
                fi
                exit
            fi
        fi
    fi
}

_tmux_autostart

#
# Modules
#
autoload -U colors && colors

autoload -U select-word-style
select-word-style bash

#
# Options
#

# Use directory stack
setopt auto_pushd
# Don't push duplicates in stack
setopt pushd_ignore_dups

setopt auto_remove_slash
setopt auto_cd

setopt no_beep

#
# Bindings
#
bindkey -e

# delete char with backspaces and delete
bindkey '^[[3~' delete-char
bindkey '^?' backward-delete-char
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line
bindkey '^[[Z' reverse-menu-complete
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word
bindkey -s '\e\e[A' '^Ucd ..; ls^M'

#
# Aliases
#

# Directory stack navigation
alias d="dirs -v"
for index ({1..9}) alias "$index"="cd +${index}"; unset index

alias ls='exa -F  --header'
alias ll='exa -lF --time-style=long-iso --header'
alias vim='nvim'
alias e='nvim'
alias fm='vifm'
alias duh='du -chd1'
alias serve='http-server'
alias coder='code -r .'
alias dev='cd ~dev'
alias cwd='pwd | pbcopy'
alias o='open'
alias weather='curl wttr.in'
alias ek='$EDITOR ~/.config/karabiner.edn'
alias bi='brew install'
alias bu='brew update'
alias bup='brew upgrade'
alias bun='brew uninstall'

alias notes='cd ~n && nvim ~n'
alias dots='cd $HOME/.dotfiles/'
alias em='/Applications/Emacs.app/Contents/MacOS/Emacs'
alias grep='rg'

hash -d -- dev=$HOME/Developer
hash -d -- dropbox=$HOME/Dropbox
hash -d -- downloads=$HOME/Downloads
hash -d -- n=$HOME/Documents/Notes

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export FZF_DEFAULT_COMMAND="fd . $HOME"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd -t d . $HOME"

source "${HOME}/.zgen/zgen.zsh"
if ! zgen saved; then
    zgen load mafredri/zsh-async
    zgen load sindresorhus/pure
    zgen load rpeshkov/zsh-snv
    zgen load eendroroy/zed-zsh
    zgen load zsh-users/zsh-syntax-highlighting
    zgen save
fi

#
# Completion
#

fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i

# forces zsh to realize new commands
zstyle ':completion:*' completer _oldlist _expand _complete _match _ignored _approximate

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# rehash if command not found (possibly recently installed)
zstyle ':completion:*' rehash true

# menu if nb items > 2
zstyle ':completion:*' menu select=2

# colored menu
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

#
# History
#
HISTFILE=~/.zsh_history
HISTSIZE=1024
SAVEHIST=1024
setopt append_history
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt hist_verify
setopt inc_append_history
setopt share_history
setopt bang_hist

function denter() {
    if [ -z "$1" ]; then
        echo "\nPlease:\n denter [ContainerName]\n\nView:\n docker container ls\n"
    else
        docker exec -it "$1" /bin/bash
    fi
}
export PATH="/usr/local/sbin:$PATH"

export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"
