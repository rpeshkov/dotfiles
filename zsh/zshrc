# ;; -*- mode: sh -*-

stty -ixon -ixoff

#
# Modules
#
autoload -U colors && colors
autoload -U edit-command-line
autoload -U select-word-style && select-word-style bash

#
# Options
#
setopt auto_pushd
setopt pushd_ignore_dups
setopt auto_remove_slash
setopt no_beep
setopt extended_glob

autoload -U promptinit; promptinit
prompt pure

#
# Bindings
#
bindkey -e
bindkey '^[[3~' delete-char
bindkey '^?' backward-delete-char
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line
bindkey '^[[Z' reverse-menu-complete
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word

function _fzf-tmux-pane-path {
    zle -U "$(tmux lsp -F \#{pane_current_path} | uniq | fzf --height=7)"
    zle redisplay
}
zle -N _fzf-tmux-pane-path
bindkey '\et' _fzf-tmux-pane-path

function copy-kill-whole-line {
    zle kill-whole-line
    echo -n $CUTBUFFER | pbcopy
}
zle -N copy-kill-whole-line
bindkey '^x^x' copy-kill-whole-line

zle -N edit-command-line
bindkey '^x^e' edit-command-line

bindkey -s '^x^f' 'nnn^M'

#
# Completion
#
fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

zstyle ':completion:*' completer _oldlist _expand _complete _match _ignored _approximate
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' insert-tab pending
zstyle ':completion:*' rehash true
zstyle ':completion:*' menu select=2
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

#
# Aliases
#

# Directory stack navigation
alias d="dirs -v"
for index ({1..9}) alias "$index"="cd +${index}"; unset index

alias ls='ls -F'
alias l='ls -l'
alias lla='ls -la'
alias vim='nvim'
alias duh='du -chd1'
alias serve='http-server'
alias coder='code -r .'
alias cwd='pwd | pbcopy'
alias dots='cd $HOME/.dotfiles/'
alias wat='watson'
alias v='qlmanage -p'
alias cdr='cd $(git rev-parse --show-toplevel)'

#
# FZF
#
if [ -f "${HOME}/.fzf.zsh" ]; then
    source "${HOME}/.fzf.zsh"
    export FZF_DEFAULT_COMMAND='fd --type f'
fi

#
# Zgen
#
if [ -f "${HOME}/.zgen/zgen.zsh" ]; then
    source "${HOME}/.zgen/zgen.zsh"
    if ! zgen saved; then
        zgen load mafredri/zsh-async
        zgen load zsh-users/zsh-syntax-highlighting
        zgen save
    fi
fi

#
# Autocompletion
#

_git_bd () {
    __gitcomp_direct "$(__git_heads "" "$cur" " ")"
}
_git_bdd () {
    __gitcomp_direct "$(__git_heads "" "$cur" " ")"
}

__git_rally () {
    git symbolic-ref --short HEAD | sed -e 's:^\([^-]*\)-.*:\1:' | xargs -I {} open 'https://rally1.rallydev.com/#/search?keywords='{}
}


#
# History
#
HISTFILE=~/.zsh_history
HISTSIZE=1024
SAVEHIST=1024
setopt append_history
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt hist_verify
setopt inc_append_history
setopt share_history
setopt bang_hist

function tm() {
    tmux move-window -t 0:$(tmux list-windows -t 0 | wc -l | awk '{print $1+1}')
}

eval "$(zoxide init zsh)"

[ -f "$HOME/.zshrc_local" ] && source "$HOME/.zshrc_local"

function ylinks() {
    fd . -t l node_modules | sed 's/^node_modules\///'
}

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
