set -g base-index 1
set -g renumber-windows
set -s escape-time 0
set -g status-interval 5
set -g status-position top
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g history-limit 50000
set -g set-titles on
set -g set-titles-string "#I:#W #{pane_current_path}"
set -g mouse on
set -g status-keys emacs
set -g focus-events on

setw -g pane-base-index 1
setw -g mode-keys vi
setw -g aggressive-resize on

unbind C-b
set-option -g prefix C-s
bind-key C-s send-prefix
bind-key -n C-Space resize-pane -Z

unbind C-z

# Visual, yanking, pasting
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy
bind-key 'p' paste-buffer
bind-key 'P' choose-buffer

bind-key 'u' capture-pane -J \; save-buffer "${TMPDIR}/tmux-buffer" \; delete-buffer \; split-window -l 10 "urlview '${TMPDIR}/tmux-buffer'"
bind-key 'v' split-window -h "nvim '${HOME}/todo.txt'"
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "Î»"\

# Reload tmux configuration
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Splits creation
bind h split-window -hb -c "#{pane_current_path}"
bind j split-window -c "#{pane_current_path}"
bind k split-window -b -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"

# Splits resize
bind -r C-h resize-pane -L 4
bind -r C-j resize-pane -D 2
bind -r C-k resize-pane -U 2
bind -r C-l resize-pane -R 4

# Panes synchronization toggle
bind C-s set-window-option synchronize-panes

bind C-c new-session

# Status bar configuration
source-file ~/.tmux-status.conf

# Vim-Tmux navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l
