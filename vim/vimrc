set nocompatible

"
" Plugins
"
call plug#begin('~/.vim/plugged')
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'editorconfig/editorconfig-vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'sheerun/vim-polyglot'
Plug 'romainl/Apprentice'
Plug 'jiangmiao/auto-pairs'
call plug#end()
packadd cfilter

"
" Visual
"
syntax on
colorscheme apprentice
hi Normal ctermbg=NONE

set number
set cursorline
set linebreak
let &showbreak='↪ '
set shortmess+=c
set splitbelow splitright
set synmaxcol=300
set title
set lazyredraw
let html_no_rendering=1
set listchars=tab:‣\ ,trail:·,precedes:«,extends:»,eol:¬

"
" Search
"
set hlsearch
set incsearch
set ignorecase
set smartcase
set inccommand=nosplit
set grepprg=rg\ --vimgrep
set grepformat=%f:%l:%c:%m,%f:%l:%m

"
" Editor
"
set autowrite
set clipboard=unnamedplus
set hidden
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab
set noswapfile
set notimeout
set ttimeout
set ttimeoutlen=10
set pumheight=10
set virtualedit=block
set completeopt+=noselect,noinsert,menuone

augroup hlsearch
    autocmd!
    autocmd InsertEnter * :setlocal nohlsearch
    autocmd InsertLeave * :setlocal hlsearch
augroup END

"
" UNGROUPED
"
let loaded_matchparen=1
set scrolloff=5
set mouse=a
set wildmenu
set wildmode=longest:full,full
set wildignore+=**/node_modules

"
" Bindings
"
let mapleader=" "

" Vimrc editing simplification
nnoremap <silent> <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <silent> <leader>sv :source $MYVIMRC<cr>

" No Ex mode
nnoremap Q <Nop>

" Moving through visual line by default
noremap j gj
noremap k gk
noremap gj j
noremap gk k

" Yank till end of line
nnoremap Y y$

" Easier jump to begin/end of line
noremap H ^
noremap L $
vnoremap L g_
vnoremap $ g_

" Select the line
nnoremap vv ^vg_

" Shifting left/right
vmap <silent> > >gv
vmap <silent> < <gv

" I want each newline to create undo point
inoremap <return> <C-g>u<cr>

" Keep the cursor in place while joining lines
nnoremap J mzJ`z

" Open folds when jumping through matches
nnoremap n nzzzv
nnoremap N Nzzzv

nnoremap <silent> <esc><esc> :nohlsearch<cr>

nmap <silent> <C-p> :FZF<CR>
nmap <silent> <leader>/ :BLines<cr>

nnoremap <leader>w :clo<cr>

command! -nargs=0 -bang B Buffers
command! -nargs=0 -bang F Files

" Zooming into specific split.
map <silent> zi :tabedit +<C-r>=line(".")<cr> %<cr>zz
map <silent> Zi :only<cr>
map <silent> zo :call ZoomOut()<cr>
function! ZoomOut()
    let linenr = line(".")
    exec 'tabclose'
    exec 'normal ' . linenr . 'G'
endfunction

" https://github.com/stoeffel/.dotfiles/blob/master/vim/visual-at.vim
xnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>

function! ExecuteMacroOverVisualRange()
  echo "@".getcmdline()
  execute ":'<,'>normal @".nr2char(getchar())
endfunction

" [Yaml] configuration
augroup filetype_yaml
    autocmd!
    autocmd FileType yaml setlocal ts=2 sts=2 sw=2
augroup END

" FZF
augroup fzf
    autocmd!
    autocmd  FileType fzf set laststatus=0 noruler
            \| autocmd BufLeave <buffer> set laststatus=2 ruler
augroup END

" Vim Help
function! Help_autocmd()
    if &l:buftype ==# 'help'
        wincmd L
        80 wincmd |
        setlocal signcolumn=no
    endif
endfunction

augroup vim_help
    autocmd!
    autocmd BufWinEnter * call Help_autocmd()
augroup END
